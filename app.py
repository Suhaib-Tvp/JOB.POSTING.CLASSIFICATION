# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n1zOywuJQpBX0Hl1lkWYTKDsMNF6XT3H
"""

import streamlit as st
import pandas as pd
from scraper import run_pipeline, classify_new_job

st.set_page_config(page_title="Karkidi Job Scraper & Clustering", layout="wide")

st.title("Karkidi Data Science Job Scraper & Clustering")

# Sidebar controls
st.sidebar.header("Scraping & Clustering Options")
keyword = st.sidebar.text_input("Job keyword", "data science")
pages = st.sidebar.slider("Number of pages to scrape", 1, 10, 2)
n_clusters = st.sidebar.slider("Number of clusters", 2, 15, 8)

if st.sidebar.button("Scrape and Cluster Jobs"):
    with st.spinner("Scraping and clustering jobs..."):
        jobs = run_pipeline(keyword=keyword, pages=pages, n_clusters=n_clusters)
        if jobs:
            st.success(f"Processed {len(jobs)} jobs.")
            df = pd.DataFrame(jobs)
            st.dataframe(df)
        else:
            st.warning("No jobs scraped. Try changing your keyword or pages.")

st.header("Classify a New Job by Skills")
skills_input = st.text_area("Enter skills (comma or semicolon separated)", height=80)
if st.button("Classify Job"):
    if skills_input.strip():
        try:
            cluster = classify_new_job(skills_input)
            st.success(f"This job belongs to cluster: {cluster}")
        except Exception as e:
            st.error(f"Error classifying job: {e}")
    else:
        st.warning("Please enter some skills.")

st.markdown("---")
st.caption("Built with Streamlit. Powered by Karkidi scraping and KMeans clustering.")